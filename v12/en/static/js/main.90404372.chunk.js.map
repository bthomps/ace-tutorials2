{"version":3,"sources":["assets/message-flow-v2.svg","components/ListPanelItem.js","components/TutorialPreview.js","components/Tutorial.js","layouts/LayoutNav.js","Page/TutorialsPage.js","Page/WelcomePage.js","Page/TutorialPage.js","App.js","index.js"],"names":["module","exports","ListPanelItem","name","desc","tags","durationMins","handleLinkClick","hasButtons","handleDetailsActive","handleDetailsClick","baseClass","useState","focus","pointer","active","setActive","itemClasses","setItemClasses","updateItemClasses","newActive","handleActivate","e","newState","type","substr","length","handleDeactivate","className","onFocus","onBlur","onPointerEnter","onPointerLeave","light","handleClick","preview","tabIndex","Fragment","aria-label","map","tag","Tag","key","Button","kind","iconDescription","renderIcon","ArrowRight16","size","onClick","tutorialName","preventDefault","stopPropagation","repoMetadata","console","log","repoMetadataTutorial","categories","tutorials","find","tutorialRepoName","stepsURL","split","javaSetSelectedTutorialFunction","alert","message","javaOpenTutorialStepsFunction","startTutorial","TopicsListItems","topics","result","topic","push","ListItem","title","OutcomesListItems","outcomes","outcome","TutorialPreview","downloadCount","tutorialData","allTutorials","details","tutorial","pageDetails","common","_common","summary","shortDescription","durationTime","topicsName","UnorderedList","topicList","outcomesName","outcomeList","overviewName","sections","item","index","section","PageSteps","initiallyOpen","tutorialZipUrl","setDownloadCount","tutorialZipUrlArray","zipUrlTutorialName","zipUrlTutorialVersion","zipUrlTutorialFile","downloadCountUrl","useEffect","a","fetch","headers","Headers","Accept","method","mode","credentials","response","json","responseData","assets","download_count","fetchDownloadCount","id","stepsUrl","getTutorialData","Tutorial","tutorialClasses","setTutorialClasses","setTutorialName","selectName","setSelectedTutorial","zipURL","Accordion","ariaAttributes","LayoutNav","children","Header","HeaderName","href","HeaderNavigation","HeaderMenuItem","navigationLinks","Home20","element","NavLink","to","pathname","Education20","AddComment20","Language20","slice","TutorialsListItems","search","sort","filterRegex","RegExp","list","filter","exec","category","listDom","updatedList","removedItems","splice","concat","_tags","_categories","shortDesc","detailsLink","detailsURL","PromotedTutorial","image","imgSource","process","src","alt","PromotedTutorials","i","tutorialDuration","toLowerCase","includes","filterOptions","label","options","allTagOptions","types","allTags","Set","add","cat","Math","floor","random","value","initFilterOptions","TutorialsPage","route","useHistory","setSearch","panelOpen","setPanelOpen","tutorialDetails","setTutorialDetails","ideNavigationContent","document","getElementsByClassName","handleTutorialClick","style","handleClose","heading","IdeFilter","onChange","val","valMap","join","placeholderText","searchForText","open","onOverlayClose","onClose","WelcomePage","history","homeConfig","headerOne","headerTwo","headerGraphic","imgSrc","product_graphic","imgAlt","imgClassName","sets","setHeading","tasks","taskId","cardSize","taskHeading","taskHeadingDescription","taskGraphic","Education32","onInteract","AddComment32","cardHref","Language32","location","TutorialPage","setTutorialData","match","params","fetchJsonFile","pageSteps","pageTitle","pageSubTitle","createStep","create","prepareStep","prepare","runStep","run","helpLinkUrl","helpLink","link","helpLinkText","text","onLinkClick","evt","url","javaOpenURLInExternalBrowserFunction","onOpenResource","javaOpenResourceEditorTutorialFunction","Link","javaBackToGalleryFunction","onBacktoGalleryClick","onHelpLinkClick","AccordionItem","overview","actions","detail","detailIndex","zipUrl","javaImportPIFileFunction","editorResPaths","resourceId","onImportArtifactClick","Download16","sectionIndex","parse","steps","helpLinks","description","OrderedList","substeps","substep","substepIndex","exits","cleanupDescription","tut","tutInfoString","javaGetSelectedTutorialFunction","JSON","undefined","javaUnDeployResourcesFunction","javaDeleteProjectsFromWorkspaceFunction","projects","onCleanUpClick","TrashCan16","App","basename","exact","path","component","from","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.90404372.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/message-flow-v2.2802d3ff.svg\";","import React, { useState } from 'react'\r\nimport { Button, Tag, ClickableTile } from 'carbon-components-react'\r\nimport { Time16, ArrowRight16 } from '@carbon/icons-react'\r\n\r\nimport repoMetadata from '../repo_metadata.json'\r\n\r\nimport './ListPanelItem.scss'\r\n\r\nconst startTutorial = (\r\n  e,\r\n  tutorialName\r\n) => {\r\n  e.preventDefault()\r\n  e.stopPropagation()\r\n\r\n  let result = null\r\n  let tut = null\r\n  let tutUrl = null\r\n\r\n  if (tutorialName && repoMetadata) {\r\n    console.log(tutorialName)\r\n    const repoMetadataTutorial = repoMetadata.categories[0].tutorials.find(({ name }) => name === tutorialName)\r\n\r\n    console.log('-------repoMetadataTutorial---------')\r\n    console.log(repoMetadataTutorial)\r\n    const selectedTutorialUrl = repoMetadataTutorial.stepsURL\r\n    const selectedTutorialUrlSplit = selectedTutorialUrl.split('/')\r\n    const tutorialRepoName = selectedTutorialUrlSplit[9]\r\n\r\n    console.log('-------tutorialRepoName---------')\r\n    console.log(tutorialRepoName)\r\n\r\n    /*eslint-disable no-undef*/\r\n    try {\r\n      result = javaSetSelectedTutorialFunction(tutorialName)\r\n    } catch (e) {\r\n      alert('a java error in javaSetSelectedTutorialFunction occurred: ' + e.message)\r\n    }\r\n\r\n    try {\r\n      result = javaOpenTutorialStepsFunction(`https://ot4i.github.io/ace-tutorials/v12/en/TutorialManager.html#/./tutorials/${tutorialRepoName}`)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenTutorialStepsFunction occurred: ' + e.message)\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n}\r\n\r\nexport const ListPanelItem = ({\r\n  name,\r\n  desc,\r\n  tags,\r\n  durationMins,\r\n  handleLinkClick,\r\n  handleDetailsActive,\r\n  handleDetailsClick,\r\n  hasButtons\r\n}) => {\r\n  const baseClass = 'list-panel-item'\r\n  const [active, setActive] = useState({\r\n    focus: false,\r\n    pointer: false\r\n  })\r\n\r\n  const [itemClasses, setItemClasses] = useState(baseClass)\r\n  const handleClick = (preview) => {\r\n    handleLinkClick(preview === true)\r\n  }\r\n\r\n  const updateItemClasses = (newActive) => {\r\n    setItemClasses(\r\n      newActive.focus || newActive.pointer\r\n        ? `${baseClass} ${baseClass}--active`\r\n        : `${baseClass}`\r\n    )\r\n  }\r\n\r\n  const handleActivate = (e) => {\r\n    const newState = { ...active }\r\n    const type = e.type === 'focus' ? e.type : e.type.substr(0, e.type.length - 5)\r\n    newState[type] = true\r\n    setActive(newState)\r\n    updateItemClasses(newState)\r\n  }\r\n\r\n  const handleDeactivate = (e) => {\r\n    const newState = { ...active }\r\n    const type = e.type === 'blur' ? 'focus' : e.type.substr(0, e.type.length - 5)\r\n    newState[type] = false\r\n    setActive(newState)\r\n    updateItemClasses(newState)\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={itemClasses}\r\n      onFocus={handleActivate}\r\n      onBlur={handleDeactivate}\r\n      onPointerEnter={handleActivate}\r\n      onPointerLeave={handleDeactivate}\r\n    >\r\n      <ClickableTile light handleClick={handleClick} tabIndex='0'>\r\n        <div className='list-panel-item__heading'>\r\n          <h2 className='list-panel-item__title'>{name}</h2>\r\n        </div>\r\n        <p className='list-panel-item__text text--long'>\r\n          {desc}\r\n        </p>\r\n        <div className='list-panel-item__lower'>\r\n          <div className='list-panel-item__lower-left'>\r\n            {\r\n              durationMins && (\r\n                <React.Fragment>\r\n                  <Time16\r\n                    className='list-panel-item__duration-img'\r\n                    aria-label='Timing indicator'\r\n                  />\r\n                  <span className='list-panel-item__duration-text'>\r\n                    {durationMins} minutes\r\n                  </span>\r\n                </React.Fragment>\r\n              )\r\n            }\r\n            {\r\n              tags && tags.map((tag) =>\r\n                <Tag key={tag}>{tag}</Tag>\r\n              )\r\n            }\r\n          </div>\r\n          {\r\n            hasButtons && (\r\n              <Button\r\n                kind='ghost'\r\n                iconDescription='Start tutorial'\r\n                renderIcon={ArrowRight16}\r\n                size='sm'\r\n                onClick={(e) => startTutorial(e, name)}\r\n                className='list-panel-item__start-button'\r\n              >\r\n                Start\r\n              </Button>\r\n            )\r\n          }\r\n        </div>\r\n      </ClickableTile>\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './TutorialPreview.scss'\r\n\r\nimport { UnorderedList, ListItem } from 'carbon-components-react'\r\nimport { Time20, Download20 } from '@carbon/icons-react'\r\nimport allTutorials from '../tutorials_data.json'\r\n\r\nconst TopicsListItems = ({ topics }) => {\r\n  const result = []\r\n  for (const topic of topics) {\r\n    result.push(\r\n      <ListItem className='tutorial-preview__' key={topic.title}>\r\n        {topic.title}\r\n      </ListItem>\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst OutcomesListItems = ({ outcomes }) => {\r\n  const result = []\r\n\r\n  for (const outcome of outcomes) {\r\n    result.push(\r\n      <ListItem className='tutorial-preview__outcome' key={outcome.title}>\r\n        {outcome.title}\r\n      </ListItem>\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const TutorialPreview = ({ name, downloadCount }) => {\r\n  const tutorialData = allTutorials[name]\r\n  const details = (tutorialData && tutorialData.tutorial.pageDetails) || ''\r\n  const common = (tutorialData && tutorialData.tutorial._common) || ''\r\n  const summary = details.summary\r\n\r\n  if (tutorialData) {\r\n    return (\r\n      <div className='tutorial-preview'>\r\n        <div className='tutorial-preview__section'>\r\n          <span />\r\n          <p className='tutorial-preview__text'>{common.shortDescription}</p>\r\n        </div>\r\n        <div className='tutorial-preview__section tutorial-preview__section--row'>\r\n          <div className='tutorial-preview__schedule' title='Estimated tutorial duration time'>\r\n            <Time20 className='tutorial-preview__icon' />\r\n            <p>{common.durationTime}.</p>\r\n          </div>\r\n          {\r\n            downloadCount && (\r\n              <div className='tutorial-preview__downloads' title='Number of downloads'>\r\n                <Download20 className='tutorial-preview__icon' />\r\n                <p>{downloadCount}</p>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n        <div className='tutorial-preview__section'>\r\n          <p className='tutorial-preview__text'>{details.topicsName}</p>\r\n          <UnorderedList className='tutorial-preview__list'>\r\n            <TopicsListItems topics={details.topicList} />\r\n          </UnorderedList>\r\n        </div>\r\n        <div className='tutorial-preview__section'>\r\n          <p className='tutorial-preview__text'>{details.outcomesName}</p>\r\n          <UnorderedList className='tutorial-preview__list'>\r\n            <OutcomesListItems outcomes={details.outcomeList} />\r\n          </UnorderedList>\r\n        </div>\r\n        <div className='tutorial-preview__section'>\r\n          <p className='tutorial-preview__text-header'>\r\n            {\r\n              (summary && summary.overviewName) === 'OVERVIEW' ?\r\n              'Details' : summary.overviewName\r\n            }\r\n          </p>\r\n          {\r\n            summary && summary.sections && summary.sections.map((item, index) => (\r\n              <p key={`item-section:${index}`} className='tutorial-preview__text'>\r\n                {item.section}\r\n              </p>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Accordion, Button} from 'carbon-components-react'\r\nimport { TutorialPreview } from './TutorialPreview'\r\nimport repoMetadata from '../repo_metadata.json'\r\n\r\nimport './Tutorial.scss'\r\n\r\nconst setSelectedTutorial = (selectName) => {\r\n  let result = null\r\n\r\n  console.log(selectName)\r\n\r\n  /*eslint-disable no-undef*/\r\n  try {\r\n    result = javaSetSelectedTutorialFunction(selectName)\r\n  } catch (e) {\r\n    alert('a java error in javaSetSelectedTutorialFunction occurred: ' + e.message)\r\n  }\r\n  /*eslint-enable no-undef*/\r\n}\r\n\r\nconst getTutorialData = (\r\n  repoMetadataTutorial,\r\n  handleLinkClick\r\n) => {\r\n  const stepsUrl = repoMetadataTutorial.stepsURL\r\n  const tutorialStepsUrl = stepsUrl && stepsUrl.split('/')\r\n  const tutorialName = tutorialStepsUrl[9]\r\n\r\n  handleLinkClick(tutorialName)\r\n}\r\n\r\nconst startTutorial = (\r\n  tutorialName,\r\n  handleLinkClick\r\n) => {\r\n  let result = null\r\n  let tut = null\r\n  let tutUrl = null\r\n\r\n  if (tutorialName && repoMetadata) {\r\n    const repoMetadataTutorial = repoMetadata.categories[0].tutorials.find(({ name }) => name === tutorialName)\r\n    getTutorialData(repoMetadataTutorial, handleLinkClick)\r\n\r\n    const selectedTutorialUrl = repoMetadataTutorial.stepsURL\r\n    const selectedTutorialUrlSplit = selectedTutorialUrl.split('/')\r\n    const tutorialRepoName = selectedTutorialUrlSplit[9]\r\n\r\n    /*eslint-disable no-undef*/\r\n    try {\r\n      result = javaOpenTutorialStepsFunction(`https://ot4i.github.io/ace-tutorials/v12/en/TutorialManager.html#/./tutorials/${tutorialRepoName}`)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenTutorialStepsFunction occurred: ' + e.message)\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n}\r\n\r\nconst PageSteps = ({\r\n  preview,\r\n  initiallyOpen,\r\n  handleLinkClick,\r\n  name,\r\n  tutorialZipUrl\r\n}) => {\r\n  const result = []\r\n  const [openSection, setOpenSection] = useState(\r\n    preview ? 'Overview' : initiallyOpen ? initiallyOpen : 'Create'\r\n  )\r\n\r\n  const handleHeadingClick = (name) => {\r\n    setOpenSection(name)\r\n  }\r\n\r\n  const [downloadCount, setDownloadCount] = useState(null)\r\n\r\n  const tutorialZipUrlArray = tutorialZipUrl && tutorialZipUrl.split('/')\r\n  const zipUrlTutorialName = tutorialZipUrlArray && tutorialZipUrlArray[4]\r\n  const zipUrlTutorialVersion = tutorialZipUrlArray && tutorialZipUrlArray[7]\r\n  const zipUrlTutorialFile = tutorialZipUrlArray && tutorialZipUrlArray[8]\r\n\r\n  let downloadCountUrl = ''\r\n  if (zipUrlTutorialName && zipUrlTutorialVersion && zipUrlTutorialFile) {\r\n    downloadCountUrl = 'https://api.github.com/repos/ot4i/' + zipUrlTutorialName + '/releases/tags/' + zipUrlTutorialVersion\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchDownloadCount = async () => {\r\n      if (downloadCountUrl && (downloadCountUrl !== '')) {\r\n        const response = await fetch(downloadCountUrl, {\r\n          headers: new Headers({\r\n            Accept: 'application/vnd.github.v3+json'\r\n          }),\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          credentials: 'omit' // Useful for including session ID (and, IIRC, authorization headers)\r\n        })\r\n\r\n        const responseData = await response.json()\r\n        if (responseData && responseData.assets[0] && responseData.assets[0].download_count) {\r\n          setDownloadCount(responseData.assets[0].download_count)\r\n        }\r\n      } else {\r\n        setDownloadCount(null)\r\n      }\r\n    }\r\n    fetchDownloadCount()\r\n  },[downloadCountUrl])\r\n\r\n  // Preview is always TRUE for now as this only covers Overview\r\n  if (preview) {\r\n    result.push(\r\n      <li\r\n        className='bx--accordion__item bx--accordion__item--active tutorial-stage tutorial-stage--preview'\r\n        key='Overview-preview'\r\n      >\r\n        <div className='bx--accordion__title tutorial-stage--preview__title'>\r\n          Overview\r\n        </div>\r\n        <div id='accordion-item-1' className='bx--accordion__content'>\r\n          <TutorialPreview\r\n            name={name}\r\n            downloadCount={downloadCount}\r\n          />\r\n        </div>\r\n      </li>\r\n    )\r\n\r\n    result.push(\r\n      <li className='bx--accordion__item tutorial-stage' key='tutorial-start'>\r\n        <Button\r\n          className='tutorial-start'\r\n          onClick={() => startTutorial(name, handleLinkClick)}\r\n        >\r\n          Start\r\n        </Button>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const Tutorial = ({ name, preview, initiallyOpen, handleLinkClick }) => {\r\n  const tutorialBaseClass = 'tutorial'\r\n  const [tutorialClasses, setTutorialClasses] = useState('');\r\n  const [tutorialName, setTutorialName] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (preview) {\r\n      setTutorialClasses(`${tutorialBaseClass} ${tutorialBaseClass}--preview`);\r\n    } else {\r\n      setTutorialClasses(`${tutorialBaseClass}`);\r\n    }\r\n    if (name && (name !== '')) {\r\n      setTutorialName(name)\r\n    } else {\r\n      setTutorialName('')\r\n    }\r\n\r\n    setSelectedTutorial(name || '')\r\n  },[preview, name])\r\n\r\n  const repoMetadataTutorial = repoMetadata.categories[0].tutorials.find(({ name }) => name === tutorialName)\r\n  const tutorialZipUrl = repoMetadataTutorial && repoMetadataTutorial.zipURL ? repoMetadataTutorial.zipURL : null\r\n\r\n  return (\r\n    <div className={tutorialClasses}>\r\n      <main className='tutorial__content'>\r\n        <Accordion>\r\n          <PageSteps\r\n            preview={preview}\r\n            initiallyOpen={initiallyOpen}\r\n            name={name}\r\n            handleLinkClick={handleLinkClick}\r\n            tutorialZipUrl={tutorialZipUrl}\r\n          />\r\n        </Accordion>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport {\r\n  Header,\r\n  HeaderName,\r\n  HeaderMenuItem,\r\n  HeaderNavigation\r\n} from 'carbon-components-react'\r\n\r\nimport {\r\n  Home20,\r\n  Education20,\r\n  AddComment20,\r\n  Language20\r\n} from '@carbon/icons-react'\r\n\r\nimport { IdeNavigation, IdeSideNavLink } from '@hybrid-cloud/ide-components'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport './LayoutNav.scss'\r\nimport './LayoutGrid.scss'\r\n\r\nconst ariaAttributes = {\r\n  'aria-labelledby': '#myId',\r\n  'aria-label': 'sample aria label to describe the nav'\r\n}\r\n\r\nexport const LayoutNav = ({ children }) => (\r\n  <React.Fragment>\r\n    <Header aria-label='IBM Toolkit'>\r\n      <HeaderName href='#'>\r\n        App Connect&nbsp;<span className='header-highlight'>Enterprise Toolkit</span>\r\n      </HeaderName>\r\n      <HeaderNavigation aria-label='IBM Toolkit'>\r\n        <HeaderMenuItem href='https://org.eclipse.ui.intro/close'>\r\n          Close page\r\n        </HeaderMenuItem>\r\n      </HeaderNavigation>\r\n    </Header>\r\n    <IdeNavigation\r\n      ariaAttributes={ariaAttributes}\r\n      navigationLinks={[\r\n        <IdeSideNavLink\r\n          key={'link-welcome-top-level'}\r\n          renderIcon={Home20}\r\n          element={NavLink}\r\n          href={'/welcome'}\r\n          to={{ pathname: '/welcome' }}\r\n        >\r\n          Welcome\r\n        </IdeSideNavLink>,\r\n        <IdeSideNavLink\r\n          key={'link-tutorials-top-level'}\r\n          renderIcon={Education20}\r\n          element={NavLink}\r\n          href={'/tutorials'}\r\n          to={{ pathname: '/tutorials' }}\r\n        >\r\n          Tutorials\r\n        </IdeSideNavLink>,\r\n        <IdeSideNavLink\r\n          key={'link-whatsnew-top-level'}\r\n          renderIcon={AddComment20}\r\n          href={'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.etools.mft.doc/bb23850_.html'}\r\n          to={{ pathname: 'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.etools.mft.doc/bb23850_.html' }}\r\n        >\r\n          <span>What&apos;s new</span>\r\n        </IdeSideNavLink>,\r\n        <IdeSideNavLink\r\n          key={'link-language-top-level'}\r\n          renderIcon={Language20}\r\n          href={'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.iib.langpacks.doc/bh25997_.htm'}\r\n          to={{ pathname: 'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.iib.langpacks.doc/bh25997_.htm' }}\r\n        >\r\n          <span>Language pack</span>\r\n        </IdeSideNavLink>\r\n      ]}\r\n    >\r\n      <div className='main-content carbon-theme--g10'>\r\n        {children}\r\n      </div>\r\n    </IdeNavigation>\r\n  </React.Fragment>\r\n)\r\n","import 'whatwg-fetch'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  IdePageHeader,\r\n  IdePageContent,\r\n  IdeSlideOverPanel\r\n} from '@hybrid-cloud/ide-components'\r\n// cp4i update\r\nimport { IdeFilter } from '@hybrid-cloud/ide-components/es/components/IdeFilter'\r\nimport { Time16, ArrowRight16 } from '@carbon/icons-react'\r\nimport { ClickableTile, Button } from 'carbon-components-react'\r\nimport { ListPanelItem } from '../components/ListPanelItem'\r\nimport { Tutorial } from '../components/Tutorial.js'\r\n\r\nimport { LayoutNav } from '../layouts/LayoutNav'\r\n\r\nimport repoMetadata from '../repo_metadata.json'\r\nimport allTutorials from '../tutorials_data.json'\r\n\r\nimport './TutorialsPage.scss'\r\n\r\nconst tutorials = repoMetadata.categories[0].tutorials.slice()\r\nconst TutorialsListItems = ({ search, sort, handleClick }) => {\r\n  const filterRegex = new RegExp(search, 'i')\r\n  const filterFunc = (item) => (\r\n    filterRegex.exec(item.name) !== null ||\r\n    filterRegex.exec(item.tags) !== null ||\r\n    filterRegex.exec(item.category) !== null\r\n  )\r\n\r\n  const list = tutorials.filter(filterFunc)\r\n\r\n  const listDom = []\r\n\r\n  let updatedList = list\r\n\r\n  if (!search) {\r\n    let removedItems = list.splice(0, 3)\r\n    updatedList = list.concat(removedItems)\r\n  }\r\n\r\n  for (const item of updatedList) {\r\n    const _tags = (item.tags && item.tags.split(';')) || []\r\n    const _categories = (item.category && item.category.split(',')) || []\r\n    listDom.push(\r\n      <ListPanelItem\r\n        name={item.name}\r\n        desc={item.shortDesc}\r\n        detailsLink={item.detailsURL}\r\n        tags={_tags.concat(_categories)}\r\n        key={item.name}\r\n        handleLinkClick={(preview) => handleClick(item.name, preview)}\r\n        hasButtons\r\n      />\r\n    )\r\n  }\r\n\r\n  return listDom\r\n}\r\n\r\nconst PromotedTutorial = ({ name, image, durationMins, handleClick }) => {\r\n  const imgSource = process.env.PUBLIC_URL + '/static_files/' + image + '.svg'\r\n  return (\r\n    <div className='promoted-tutorial__container bx--col-sm-4 bx--col-md-2 bx--col-lg-4 bx--col-xlg-4 bx--col-max-4'>\r\n      <ClickableTile\r\n        handleClick={() => handleClick(name)}\r\n        className='promoted-tutorial__tile'\r\n        tabIndex='0'\r\n      >\r\n        <p className='promoted-tutorial__text'>{name}</p>\r\n        <div className='promoted-tutorial__lower'>\r\n          <img src={imgSource} className='promoted-tutorial__img' alt='Tutorial' />\r\n          <div className='promoted-tutorial__duration'>\r\n            <div className='promoted-tutorial__lower-left'>\r\n              <Time16\r\n                className='promoted-tutorial__duration-img'\r\n                aria-label='Timing indicator'\r\n              />\r\n              <span className='promoted-tutorial__duration-text'>\r\n                {durationMins}\r\n              </span>\r\n            </div>\r\n            {\r\n              /*\r\n              <Button\r\n                kind='ghost'\r\n                iconDescription='Start tutorial'\r\n                renderIcon={ArrowRight16}\r\n                hasIconOnly\r\n              ></Button>\r\n              */\r\n            }\r\n          </div>\r\n        </div>\r\n      </ClickableTile>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PromotedTutorials = ({ handleClick }) => {\r\n  const list = []\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    const tutorialDuration = allTutorials[tutorials[i].name] && allTutorials[tutorials[i].name].tutorial._common.durationTime\r\n    tutorials[i].durationMins = tutorialDuration\r\n    if (tutorials[i].name.toLowerCase().includes('integration')) {\r\n      tutorials[i].image = 'integration-server'\r\n    } else if (tutorials[i].name.toLowerCase().includes('message')) {\r\n      tutorials[i].image = 'message-flow'\r\n    } else {\r\n      tutorials[i].image = 'rest-api'\r\n    }\r\n    list.push(tutorials[i])\r\n  }\r\n\r\n  const listDom = []\r\n  for (const item of list) {\r\n    listDom.push(\r\n      <PromotedTutorial\r\n        name={item.name}\r\n        image={item.image}\r\n        key={item.name}\r\n        className='promoted-tutorial'\r\n        handleClick={handleClick}\r\n        durationMins={item.durationMins}\r\n      />\r\n    )\r\n  }\r\n\r\n  return listDom\r\n}\r\n\r\nconst filterOptions = [\r\n  {\r\n    label: 'Tags',\r\n    options: []\r\n  }\r\n]\r\n\r\nconst initFilterOptions = () => {\r\n  const allTagOptions = []\r\n  const types = [\r\n    'red',\r\n    'magenta',\r\n    'purple',\r\n    'blue',\r\n    'cyan',\r\n    'teal',\r\n    'green',\r\n    'gray',\r\n    'cool-gray',\r\n    'warm-gray'\r\n  ]\r\n  const allTags = new Set()\r\n\r\n  for (const item of tutorials) {\r\n    const tags = (item.tags && item.tags.split(';')) || []\r\n    const categories = (item.category && item.category.split(',')) || []\r\n\r\n    for (const tag of tags) {\r\n      allTags.add(tag)\r\n    }\r\n\r\n    for (const cat of categories) {\r\n      allTags.add(cat)\r\n    }\r\n  }\r\n\r\n  for (const tag of allTags) {\r\n    allTagOptions.push({\r\n      type: types[Math.floor(Math.random() * types.length)],\r\n      value: tag,\r\n      label: tag\r\n    })\r\n  }\r\n\r\n  filterOptions.push({\r\n    label: 'Tags',\r\n    options: allTagOptions\r\n  })\r\n}\r\ninitFilterOptions()\r\n\r\nexport const TutorialsPage = (route) => {\r\n  const history = useHistory()\r\n  const [search, setSearch] = useState('')\r\n  const [panelOpen, setPanelOpen] = useState(false)\r\n  const [tutorialDetails, setTutorialDetails] = useState({})\r\n  const [preview, setPreview] = useState(true)\r\n\r\n  const ideNavigationContent = document.getElementsByClassName('IdeNavigation--content')\r\n\r\n  const handleStartTutorial = (tutorialName) => {\r\n    console.log(`Link click for '${tutorialName}'`)\r\n    // Uncomment next line for local testing\r\n    // history.push(`/tutorials/${tutorialName}${route.location.search}`)\r\n\r\n    // Re-enables scrolling of main content on IE\r\n    ideNavigationContent[0].style['overflow'] = 'auto'\r\n  }\r\n\r\n  const handleTutorialClick = (tutorialName) => {\r\n    setPanelOpen(true)\r\n    setTutorialDetails({ title: tutorialName })\r\n\r\n    // Disables scrolling of main content on IE\r\n    ideNavigationContent[0].style['overflow'] = 'hidden'\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setPanelOpen(false)\r\n    setTutorialDetails({})\r\n\r\n    // Re-enables scrolling of main content on IE\r\n    ideNavigationContent[0].style['overflow'] = 'auto'\r\n  }\r\n\r\n  const handleFilterChange = (val) => {\r\n    if (val) {\r\n      const valMap = val.map((item) => item.value)\r\n      setSearch(`((${valMap.join(\")|(\")}))`)\r\n    } else {\r\n      setSearch('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <LayoutNav>\r\n      <IdePageHeader heading='Tutorials' />\r\n      <IdePageContent>\r\n        <div className='tutorials'>\r\n          <IdeFilter\r\n            options={filterOptions}\r\n            onChange={handleFilterChange}\r\n            placeholderText='What are you looking for today?'\r\n            searchForText='Search for'\r\n          />\r\n          <div className='tutorials-page__section'>\r\n            {\r\n              search.length === 0 && (\r\n                <>\r\n                  <ul className='tutorials__promoted-list'>\r\n                    <PromotedTutorials handleClick={handleTutorialClick} />\r\n                  </ul>\r\n                </>\r\n              )\r\n            }\r\n            <ul className='tutorials__list'>\r\n              <TutorialsListItems\r\n                search={search}\r\n                handleClick={handleTutorialClick}\r\n              />\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </IdePageContent>\r\n      <IdeSlideOverPanel\r\n        open={panelOpen}\r\n        onOverlayClose={handleClose}\r\n        onClose={handleClose}\r\n        size='medium'\r\n        title={tutorialDetails.title}\r\n      >\r\n        <Tutorial\r\n          name={tutorialDetails.title}\r\n          preview={preview}\r\n          handleLinkClick={handleStartTutorial}\r\n        />\r\n      </IdeSlideOverPanel>\r\n    </LayoutNav>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { IdeHome } from '@hybrid-cloud/ide-components'\r\nimport './WelcomePage.scss'\r\nimport product_graphic from '../assets/message-flow-v2.svg'\r\nimport { Education32, AddComment32, Language32 } from '@carbon/icons-react'\r\nimport { LayoutNav } from '../layouts/LayoutNav'\r\n\r\nexport const WelcomePage = (route) => {\r\n  const history = useHistory()\r\n  const homeConfig = {\r\n    headerOne: 'Welcome to IBM App Connect Enterprise Toolkit',\r\n    headerTwo: 'Integrate your business. Connect your world.',\r\n    headerGraphic: {\r\n      imgSrc: product_graphic,\r\n      imgAlt: 'My image alt text',\r\n      imgClassName: 'ide--home-storybook-header'\r\n    },\r\n    sets: [\r\n      {\r\n        id: 'getting_started',\r\n        setHeading: 'Getting Started',\r\n        tasks: [\r\n          {\r\n            taskId: 'tutorials',\r\n            cardSize: 'standard',\r\n            taskHeading: 'Tutorials',\r\n            taskHeadingDescription: 'Get started quickly using our tutorials',\r\n            taskGraphic: Education32,\r\n            onInteract: (e) => handleClick(e)\r\n          },\r\n          {\r\n            taskId: 'whats-new',\r\n            cardSize: 'standard',\r\n            taskHeading: \"What's new?\",\r\n            taskHeadingDescription: \"See what's new in IBM App Connect Enterprise v12.0\",\r\n            taskGraphic: AddComment32,\r\n            cardHref: 'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.etools.mft.doc/bb23850_.html'\r\n          },\r\n          {\r\n            taskId: 'language-pack',\r\n            cardSize: 'standard',\r\n            taskHeading: 'Language pack',\r\n            taskHeadingDescription: 'Install a toolkit language pack',\r\n            taskGraphic: Language32,\r\n            cardHref: 'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.iib.langpacks.doc/bh25997_.htm'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    history.push(`/${e}${route.location.search}`)\r\n  }\r\n\r\n  return (\r\n    <LayoutNav>\r\n      <IdeHome {...homeConfig} />\r\n    </LayoutNav>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n  Button,\r\n  Link,\r\n  Accordion,\r\n  AccordionItem,\r\n  OrderedList,\r\n  UnorderedList,\r\n  ListItem\r\n} from 'carbon-components-react'\r\n\r\nimport { Time16, Download16, TrashCan16 } from '@carbon/icons-react'\r\n\r\nimport parse from 'html-react-parser'\r\n\r\nimport repoMetadata from '../repo_metadata.json'\r\n\r\nimport './TutorialPage.scss'\r\n\r\nconst TopicsListItems = ({ topics }) => {\r\n  const result = []\r\n  for (const topic of topics) {\r\n    result.push(\r\n      <ListItem className='tutorial-preview__' key={topic.title}>\r\n        {topic.title}\r\n      </ListItem>\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst OutcomesListItems = ({ outcomes }) => {\r\n  const result = []\r\n\r\n  for (const outcome of outcomes) {\r\n    result.push(\r\n      <ListItem className='tutorial-preview__outcome' key={outcome.title}>\r\n        {outcome.title}\r\n      </ListItem>\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const TutorialPage = (route) => {\r\n  const [tutorialData, setTutorialData] = useState(null)\r\n  const [openAccordionIndex, setOpenAccordionIndex] = useState(1)\r\n\r\n  const repoUrl = 'https://raw.githubusercontent.com/ot4i/'\r\n  const fileUrl = '/master/v12/doc/_data.json'\r\n  const tutorialName = route.match.params.tutorial\r\n\r\n  useEffect(() => {\r\n    const fetchJsonFile = async () => {\r\n      const response = await fetch(repoUrl + tutorialName + fileUrl, {\r\n        headers: new Headers({\r\n          Accept: 'application/vnd.github.v3+json'\r\n        }),\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        credentials: 'omit' // Useful for including session ID (and, IIRC, authorization headers)\r\n      })\r\n      const responseData = await response.json()\r\n\r\n      if (responseData) {\r\n        setTutorialData(responseData)\r\n      }\r\n    }\r\n\r\n    fetchJsonFile()\r\n  },[tutorialName])\r\n\r\n  const pageSteps = tutorialData?.tutorial?.pageSteps\r\n  const pageTitle = tutorialData?.tutorial?._common?.name\r\n  const pageSubTitle = tutorialData?.tutorial?._common?.shortDescription\r\n  const pageDetails = tutorialData?.tutorial?.pageDetails\r\n  const createStep = pageSteps?.create\r\n  const prepareStep = pageSteps?.prepare\r\n  const runStep = pageSteps?.run\r\n\r\n  const repoMetadataTutorial = repoMetadata.categories[0].tutorials.find(({ name }) => name === pageTitle)\r\n\r\n  const helpLinkUrl = tutorialData?.tutorial?._common?.helpLink?.link\r\n  const helpLinkText = tutorialData?.tutorial?._common?.helpLink?.text\r\n  const onHelpLinkClick = (e) => {\r\n    e.preventDefault()\r\n\r\n    /*eslint-disable no-undef*/\r\n    let result = null\r\n    try {\r\n      result = javaOpenURLInExternalBrowserFunction(helpLinkUrl)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenURLInExternalBrowserFunction occurred: ' + e.message)\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n\r\n  const onLinkClick = (evt, url) => {\r\n    evt.preventDefault()\r\n\r\n    /*eslint-disable no-undef*/\r\n    let result = null\r\n    try {\r\n      result = javaOpenURLInExternalBrowserFunction(url)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenURLInExternalBrowserFunction occurred: ' + e.message)\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n\r\n  const onImportArtifactClick = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    const tutorialName = pageTitle\r\n    const repoMetadataTutorial = repoMetadata.categories[0].tutorials.find(({ name }) => name === tutorialName)\r\n    const zipUrl = repoMetadataTutorial && repoMetadataTutorial.zipURL\r\n\r\n    /*eslint-disable no-undef*/\r\n    let result = null\r\n    try {\r\n      result = javaImportPIFileFunction(tutorialName, zipUrl)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenURLInExternalBrowserFunction occurred: ' + e.message)\r\n    }\r\n\r\n    if (repoMetadataTutorial && repoMetadataTutorial.editorResPaths && repoMetadataTutorial.editorResPaths.length) {\r\n      const resourceId = repoMetadataTutorial.editorResPaths[0].id\r\n      resourceId && onOpenResource(resourceId)\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n\r\n  const onBacktoGalleryClick = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    let result = null\r\n\r\n    /*eslint-disable no-undef*/\r\n    try {\r\n      result = javaBackToGalleryFunction()\r\n    } catch (e) {\r\n      alert('a java error in javaBackToGalleryFunction occurred: ' + e.message)\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n\r\n  const onCleanUpClick = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    let result = null\r\n    let tut = null\r\n\r\n    /*eslint-disable no-undef*/\r\n    try {\r\n      result = javaGetSelectedTutorialFunction()\r\n      let tutInfoString = result[0]\r\n      tut = JSON.parse(tutInfoString)\r\n    } catch (e) {\r\n      alert('a java error in javaGetSelectedTutorialFunction occurred: ' + e.message)\r\n    }\r\n\r\n    if (tut !== undefined) {\r\n      try {\r\n        result = javaUnDeployResourcesFunction()\r\n      } catch (e) {\r\n        alert('a java error in javaUnDeployResourcesFunction occurred: ' + e.message)\r\n      }\r\n\r\n      try {\r\n        result = javaDeleteProjectsFromWorkspaceFunction(tut.projects.split(':'))\r\n      } catch (e) {\r\n        alert('a java error in javaDeleteProjectsFromWorkspaceFunction occurred: ' + e.message)\r\n      }\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n\r\n  const onAccordionClick = (accordionObject, index) => {\r\n    console.log(accordionObject)\r\n    setOpenAccordionIndex(index)\r\n  }\r\n\r\n  const onOpenResource = (id) => {\r\n    /*eslint-disable no-undef*/\r\n    let result = null\r\n\r\n    try {\r\n      result = javaOpenResourceEditorTutorialFunction(id)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenResourceEditorTutorialFunction occurred: ' + e.message)\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n\r\n  const details = tutorialData?.tutorial?.pageDetails || ''\r\n  const common = tutorialData?.tutorial?._common || ''\r\n  const summary = tutorialData?.tutorial?.pageDetails?.summary || {}\r\n\r\n  if (tutorialData) {\r\n\r\n    return (\r\n      <div className=\"tutorial-page__tutorial\">\r\n        <div className='tutorials-page__tutorial--title-container'>\r\n          <h3 className='tutorials-page__tutorial--title'>\r\n            {pageTitle}\r\n          </h3>\r\n          <Link\r\n            href='#'\r\n            onClick={(e) => onBacktoGalleryClick(e)}\r\n            className='tutorials-page__tutorial--title-link'\r\n          >\r\n            Back to gallery\r\n          </Link>\r\n        </div>\r\n        <hr className='tutorials-page__tutorial--hr' />\r\n        <div className='tutorials-page__tutorial--content-container'>\r\n          <div className='tutorials-page__tutorial--subtitle-container'>\r\n            <p className='tutorials-page__tutorial--subtitle'>\r\n              {pageSubTitle}\r\n            </p>\r\n            <Link\r\n              href='#'\r\n              onClick={(e) => onHelpLinkClick(e)}\r\n              className='tutorials-page__tutorial--subtitle-link'\r\n            >\r\n              {helpLinkText}\r\n            </Link>\r\n          </div>\r\n          <br />\r\n          <Accordion size='xl'>\r\n\r\n            {/*\r\n              Overview Step\r\n              open={openAccordionIndex === 0}\r\n              onHeadingClick={(obj) => onAccordionClick(obj, 0)}\r\n            */}\r\n            <AccordionItem\r\n              title='Overview'\r\n              className='tutorial-stage tutorial-stage--overview'\r\n              key='tutorial-stage-overview'\r\n            >\r\n              <div className=\"tutorial-preview\">\r\n                <div className=\"tutorial-preview__section\">\r\n                  <span />\r\n                  <h6>{common.shortDescription}</h6>\r\n                </div>\r\n                <div className=\"tutorial-preview__section tutorial-preview__section--row\">\r\n                  <div className=\"tutorial-preview__schedule\" title='Estimated tutorial duration time'>\r\n                    <Time16 className=\"tutorial-preview__icon\" />\r\n                    <p>{common.durationTime}.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"tutorial-preview__section\">\r\n                  <p className=\"tutorial-preview__text\">{details.topicsName}</p>\r\n                  <UnorderedList className=\"tutorial-preview__list\">\r\n                    <TopicsListItems topics={details.topicList} />\r\n                  </UnorderedList>\r\n                </div>\r\n                <div className=\"tutorial-preview__section\">\r\n                  <p className=\"tutorial-preview__text\">{details.outcomesName}</p>\r\n                  <UnorderedList className=\"tutorial-preview__list\">\r\n                    <OutcomesListItems outcomes={details.outcomeList} />\r\n                  </UnorderedList>\r\n                </div>\r\n                <div className=\"tutorial-preview__section\">\r\n                  <p className=\"tutorial-preview__text-header\">\r\n                    {\r\n                      (summary && summary.overviewName) === 'OVERVIEW' ?\r\n                      'Details' : summary.overviewName\r\n                    }\r\n                  </p>\r\n                  {summary && summary.sections && summary.sections.map((item, index) => (\r\n                    <p key={`item-section:${index}`} className=\"tutorial-preview__text\">\r\n                      {item.section}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </AccordionItem>\r\n\r\n            {/*\r\n              Create Step\r\n              open={openAccordionIndex === 1}\r\n              onHeadingClick={(obj) => onAccordionClick(obj, 1)}\r\n            */}\r\n            <AccordionItem\r\n              title='Create'\r\n              className='tutorial-stage tutorial-stage--create'\r\n              key='tutorial-stage-create'\r\n              open\r\n            >\r\n            <div className=\"tutorial-preview\">\r\n              <div className=\"tutorial-preview__section tutorial-preview__section-inline\">\r\n                <h6 className='tutorial-preview__section-header'>{createStep.overview.heading}</h6>\r\n                {\r\n                  createStep && createStep.actions && createStep.actions.details && createStep.actions.details.map((detail, detailIndex) => (\r\n                    detail.method === 'importArtifacts()' && (\r\n                      <Button\r\n                        href='#'\r\n                        onClick={(e) => onImportArtifactClick(e)}\r\n                        size='sm'\r\n                        key={`createStep-button:${detailIndex}`}\r\n                        renderIcon={Download16}\r\n                        className='tutorial-preview__section-button'\r\n                      >\r\n                        {detail.name}\r\n                      </Button>\r\n                    )\r\n                  ))\r\n                }\r\n              </div>\r\n              <div className=\"tutorial-preview__section\">\r\n                {createStep && createStep.overview && createStep.overview.sections && createStep.overview.sections.map((section, sectionIndex) => (\r\n                  <div key={`item-container:${sectionIndex}`}>\r\n                    <p key={`item-section:${sectionIndex}`} className=\"tutorial-preview__text\">\r\n                      {section && section.section && parse(section.section)}\r\n                    </p>\r\n                    {\r\n                      section.steps && section.steps.details && section.steps.details.map((detail, detailIndex) => (\r\n                        <p key={`item-section:${detailIndex}`} className=\"tutorial-preview__text\">\r\n                          {detail && detail.details && parse(detail.details)}\r\n                        </p>\r\n                      ))\r\n                    }\r\n                </div>\r\n                ))}\r\n              </div>\r\n              <br />\r\n              <div className=\"tutorial-preview__section\">\r\n                <h6 className='tutorial-preview__section-header'>{createStep?.helpLinks?.title}</h6>\r\n                {createStep && createStep.helpLinks && createStep.helpLinks.details && createStep.helpLinks.details.map((detail, detailIndex) => (\r\n                  <div key={`item-container-create-help:${detailIndex}`}>\r\n                    <Link\r\n                      key={`item-section-create-help:${detailIndex}`}\r\n                      href='#'\r\n                      onClick={(e) => onLinkClick(e, detail.link)}\r\n                    >\r\n                      {detail.description}\r\n                    </Link>\r\n                </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            </AccordionItem>\r\n\r\n            {/*\r\n              Prepare Step\r\n              open={openAccordionIndex === 2}\r\n              onHeadingClick={(obj) => onAccordionClick(obj, 2)}\r\n            */}\r\n            <AccordionItem\r\n              title='Prepare'\r\n              className='tutorial-stage tutorial-stage--prepare'\r\n              key='tutorial-stage-prepare'\r\n            >\r\n            <div className=\"tutorial-preview\">\r\n              <div className=\"tutorial-preview__section tutorial-preview__section-inline\">\r\n                <h6 className='tutorial-preview__section-header'>{prepareStep.overview.heading}</h6>\r\n              </div>\r\n              <div className=\"tutorial-preview__section\">\r\n                {prepareStep && prepareStep.overview && prepareStep.overview.sections && prepareStep.overview.sections.map((section, sectionIndex) => (\r\n                  <div key={`item-container-prepare:${sectionIndex}`}>\r\n                    <p key={`item-section-prepare:${sectionIndex}`} className=\"tutorial-preview__text\">\r\n                      {section && section.section && parse(section.section)}\r\n                    </p>\r\n                    <OrderedList className='tutorial-preview__section--ordered-list'>\r\n                      {\r\n                        section.steps && section.steps.details && section.steps.details.map((detail, detailIndex) => (\r\n                          <ListItem\r\n                            key={`item-section-prepare:${detailIndex}`}\r\n                            className='tutorial-preview__section--list'\r\n                          >\r\n                            {detail && detail.details && parse(detail.details)}\r\n                            {detail && detail.substeps && console.log(detail.substeps.details) }                       \r\n                            {\r\n                              detail && detail.substeps && detail.substeps.details.map((substep, substepIndex) => (\r\n                                <ListItem\r\n                                  key={`item-section-prepare:${substepIndex}`}\r\n                                  className='tutorial-preview__section--list tutorial-preview__section--list-substep'\r\n                                >\r\n                                {substep.details && parse(substep.details)}\r\n                                </ListItem>\r\n                              ))\r\n                            }\r\n                          </ListItem>\r\n                        ))\r\n                      }\r\n                    </OrderedList>\r\n                </div>\r\n                ))}\r\n              </div>\r\n              <br />\r\n              <div className=\"tutorial-preview__section\">\r\n                <h6 className='tutorial-preview__section-header'>{prepareStep?.helpLinks?.title}</h6>\r\n                {prepareStep && prepareStep.helpLinks && prepareStep.helpLinks.details && prepareStep.helpLinks.details.map((detail, detailIndex) => (\r\n                  <div key={`item-container-prepare-help:${detailIndex}`}>\r\n                    <Link\r\n                      key={`item-section-prepare-help:${detailIndex}`}\r\n                      href='#'\r\n                      onClick={(e) => onLinkClick(e, detail.link)}\r\n                    >\r\n                      {detail.description}\r\n                    </Link>\r\n                </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            </AccordionItem>\r\n\r\n            {/*\r\n              Run Step\r\n              open={openAccordionIndex === 3}\r\n              onHeadingClick={(obj) => onAccordionClick(obj, 3)}\r\n            */}\r\n            <AccordionItem\r\n              title='Run'\r\n              className='tutorial-stage tutorial-stage--run'\r\n              key='tutorial-stage-run'\r\n            >\r\n              <div className=\"tutorial-preview\">\r\n                <div className=\"tutorial-preview__section tutorial-preview__section-inline\">\r\n                  <h6 className='tutorial-preview__section-header'>{runStep.overview.heading}</h6>\r\n                </div>\r\n                <div className=\"tutorial-preview__section\">\r\n                  {runStep && runStep.overview && runStep.overview.sections && runStep.overview.sections.map((section, sectionIndex) => (\r\n                    <div key={`item-container-run:${sectionIndex}`}>\r\n                      <p key={`item-section-run:${sectionIndex}`} className=\"tutorial-preview__text\">\r\n                        {section && section.section && parse(section.section)}\r\n                      </p>\r\n                      <OrderedList className='tutorial-preview__section--ordered-list'>\r\n                        {\r\n                          section.steps && section.steps.details && section.steps.details.map((detail, detailIndex) => (\r\n                            <ListItem\r\n                              key={`item-section-run-detail:${detailIndex}`}\r\n                              className='tutorial-preview__section--list'\r\n                            >\r\n                              {detail && detail.details && parse(detail.details)}\r\n                              {detail && detail.substeps && console.log(detail.substeps.details)}\r\n                              {\r\n                                detail && detail.substeps && detail.substeps.details.map((substep, substepIndex) => (\r\n                                  <ListItem\r\n                                    key={`item-section-run:${substepIndex}`}\r\n                                    className='tutorial-preview__section--list tutorial-preview__section--list-substep'\r\n                                  >\r\n                                    {substep.details && parse(substep.details)}\r\n                                  </ListItem>\r\n                                ))\r\n                              }\r\n                            </ListItem>\r\n                          ))\r\n                        }\r\n                      </OrderedList>\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n                <br />\r\n                <div className=\"tutorial-preview__section\">\r\n                  <h6 className='tutorial-preview__section-header'>{runStep?.helpLinks?.title}</h6>\r\n                  {runStep && runStep.helpLinks && runStep.helpLinks.details && runStep.helpLinks.details.map((detail, detailIndex) => (\r\n                    <div key={`item-container-run-help:${detailIndex}`}>\r\n                      <Link\r\n                        key={`item-section-run-help:${detailIndex}`}\r\n                        href='#'\r\n                        onClick={(e) => onLinkClick(e, detail.link)}\r\n                      >\r\n                        {detail.description}\r\n                      </Link>\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n                {\r\n                  runStep && runStep.exits && runStep.exits.details && runStep.exits.details.length && (\r\n                    <div className=\"tutorial-preview__section\">\r\n                      {\r\n                        runStep && runStep.exits && runStep.exits.details && runStep.exits.details.map((detail, detailIndex) => (\r\n                          <div key={`item-container-run-exit:${detailIndex}`}>\r\n                            <h6 className='tutorial-preview__section-header'>\r\n                              {detail.cleanupDescription || detail.description}\r\n                            </h6>\r\n                            {\r\n                              detail.method === 'cleanUp()' && (\r\n                                <Button\r\n                                  kind='danger--tertiary'\r\n                                  key={`item-section-run-exit:${detailIndex}`}\r\n                                  onClick={(e) => onCleanUpClick(e)}\r\n                                  renderIcon={TrashCan16}\r\n                                  iconDescription={detail.cleanupDescription || detail.description}\r\n                                  size='sm'\r\n                                  className='tutorial-preview__section-button'\r\n                                >\r\n                                  {detail.name}\r\n                                </Button>\r\n                              )\r\n                            }\r\n                          </div>\r\n                        ))\r\n                      }\r\n                    </div>\r\n                  )\r\n                }\r\n              </div>\r\n            </AccordionItem>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return ''\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './App.scss'\r\n\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport { TutorialsPage } from './Page/TutorialsPage'\r\nimport { WelcomePage } from './Page/WelcomePage'\r\nimport { TutorialPage } from './Page/TutorialPage'\r\n\r\nfunction App () {\r\n  return (\r\n    <div className='App toolkit-prototype'>\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route key={'route-tutorials-page'} exact path={'/tutorials'} component={TutorialsPage} />\r\n          <Route key={'route-welcome-page'} exact path={'/welcome'} component={WelcomePage} />\r\n          <Route key={'route-tutorial-page'} path={'/tutorials/:tutorial'} component={TutorialPage} />\r\n          <Redirect exact from={'/'} to={'/welcome'} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This must be the first line in src/index.js\r\nimport 'react-app-polyfill/ie9'\r\nimport 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport 'core-js/stable'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}